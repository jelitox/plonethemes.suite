[buildout]

# Python Package Index Server
index = https://pypi.org/simple/

# By default, zc.buildout doesnâ€™t unzip zip-safe eggs packages. This 
# follows the policy followed by setuptools itself. Experience shows 
# this policy to to be inconvenient. Zipped eggs make debugging more 
# difficult and often import more slowly.
# You can include an unzip option in the buildout section to change 
# the default unzipping policy.

# It is very useful when you using the omelette recipe for debugging 
# python eggs packages
unzip = true

# Don't download new things unless needed to satisfy dependencies.
# Override this on the command line with the "-n" flag.
#
newest = false

# allow picked versions
allow-picked-versions = true

# show picked versions wherever we do an automatic choice
#show-picked-versions = true

versions = versions

extensions =
    mr.developer
    buildout.threatlevel

extends =
    http://dist.plone.org/release/4.3-latest/versions.cfg
    versions.cfg
    themes.cfg


# If you change your Plone version, you'll also need to update
# the repository link below.
#
find-links =
    http://dist.plone.org/release/4.3-latest/
    http://dist.plone.org/thirdparty/
############################################ uwosh.mobile.tools
#    http://www.uwosh.edu/ploneprojects/software/uwosh.mobile.tools/releases/0.0.2/uwosh.mobile.tools-0.0.2.zip


############################################
# Parts Specification
#--------------------
# Specifies the components that should be included in the buildout.
# Most are defined in the base.cfg extension; you may add your
# own if you need them at the end of this file.
#
parts =
    instance
    instance-sitecustomize
    decogrid
    zopepy
    omelette
    scripts
    i18ndude


############################################
# Eggs
# ----
# Add an indented line to the eggs section for any Python
# eggs or packages you wish to include in your Plone instance.
#
eggs +=
    experimental.btree
    five.pt
    sauna.reload
    plone.app.debugtoolbar
    ${buildout:auto-checkout}


############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. This is increasingly rare.
#
zcml +=


# See https://pypi.org/project/plone.recipe.zope2instance for
# relevant details.
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8081
verbose-security = off
debug-mode = off
event-log-level = info
eggs =
    Plone
    plone.app.upgrade
    ${buildout:eggs}
zcml =
    ${buildout:zcml}
environment-vars =
    PTS_LANGUAGES en es
    zope_i18n_allowed_languages en es
    zope_i18n_compile_mo_files false
zope-conf-additional = %import sauna.reload


# See https://pypi.org/project/collective.recipe.template for
# relevant details.
[instance-sitecustomize]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/sitecustomize.py
mode = 600
input = inline:
    import sys
    sys.setdefaultencoding('utf-8')


# See https://pypi.org/project/zc.recipe.egg for
# relevant details.
[decogrid]
recipe = zc.recipe.egg
eggs = kombinat.decogrid


# See https://pypi.org/project/zc.recipe.egg for
# relevant details.
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy


# The symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build
# correctly.  See https://pypi.org/project/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


# See https://pypi.org/project/zc.recipe.egg for
# relevant details.
[scripts]
recipe = zc.recipe.egg
eggs =
################# Scaffolding
    ZopeSkel
    PasteScript
    PasteDeploy
    Paste
    toutpt.zopeskel
    vs.zopeskel.diazo
    zopeskel.diazochildtheme
    zopeskel.diazotheme
################# Release package
    zest.releaser


# See https://pypi.org/project/zc.recipe.egg for
# relevant details.
[i18ndude]
recipe = zc.recipe.egg
unzip = true
eggs = i18ndude
